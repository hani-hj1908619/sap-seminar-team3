sap.ui.define(
  ["sap/ui/core/mvc/ControllerExtension"],
  function (ControllerExtension) {
    "use strict";

    return ControllerExtension.extend(
      "insights.ext.controller.SolutionListExt",
      {
        override: {
          routing: {
            onAfterBinding: function (oBindingContext) {
              const oExtensionAPI = this.base.getExtensionAPI();
              // ref - https://sapui5.hana.ondemand.com/sdk/#/topic/0fdbefb48d6446bb9ed20ca42942aa10
              oExtensionAPI.setCustomMessage({
                message:
                  "insights External VRP Solutions: \n\nThis dashboard is designed not only for analyzing benchmark solutions but also for evaluating custom or externally submitted VRP solutions in a consistent and objective manner. When new solutions are added to the system, they automatically go through the same evaluation pipeline as the benchmark scenarios. This includes the calculation of key performance indicators such as total distance, total cost, route duration, time window compliance, and vehicle capacity utilization. By doing so, each new solution becomes directly comparable to the benchmark set. This allows educators, learners, and researchers to objectively assess solution quality, identify strengths and weaknesses, and track improvements over time. Whether the solution is generated by a human or an algorithm, the dashboard ensures fair and data-driven evaluation using industry-standard metrics and insights drawn from the benchmark dataset.",
                type: sap.ui.core.MessageType.Information,
              });
            },
          },
        },
        getAISummary: async function () {
          const oExtensionAPI = this.base.getExtensionAPI();
          const oModel = oExtensionAPI.getModel();
          const oView = this.getView();

          if (!this.oSummaryDialog) {
            this.oSummaryDialog = await this.base
              .getExtensionAPI()
              .loadFragment({
                name: "insights.ext.fragment.AiSummaryDialog",
                controller: this,
              });
            oView.addDependent(this.oSummaryDialog);
          }
          this.oSummaryDialog.open();

          const oActionContext = oModel.bindContext("/summary(...)");

          // execute the action call
          await oActionContext
            .execute()
            .then(() => {
              const oResult = oActionContext.getBoundContext().getObject();
              const jsonModel = new sap.ui.model.json.JSONModel({
                summary: oResult.value,
              });
              sap.ui.getCore().byId("_IDGenDialog1").setModel(jsonModel);
            })
            .catch((err) => {
              console.error("Error executing action:", err);
              sap.m.MessageToast.show("Failed to fetch AI summary.");
            });
        },
        onSummaryDialogClose: function () {
          if (this.oSummaryDialog) {
            this.oSummaryDialog.close();
          }
        },
      }
    );
  }
);
